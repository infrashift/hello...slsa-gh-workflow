name: Reusable OCI Attestor and Publisher

on:
  workflow_call:
    inputs:
      image_name_with_tag:
        required: true
        type: string
      image_name_no_tag: # e.g., github_owner/image_name
        required: true
        type: string
      image_digest:
        required: true
        type: string
      sbom_cyclonedx_path:
        required: true
        type: string
      sbom_spdx_path:
        required: true
        type: string
      sbom_syft_json_path:
        required: true
        type: string
      cve_report_path:
        required: true
        type: string

permissions:
  actions: read
  contents: read
  id-token: write
  attestations: write
  packages: write

jobs:
  attest_and_publish_artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts (SBOMs, CVE report)
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: ./downloaded-artifacts

      - name: Attest OCI Image Build Provenance
        id: attest_image
        uses: actions/attest-build-provenance@v2
        with:
          subject-digest: ${{ inputs.image_digest }}
          subject-name: ${{ inputs.image_name_with_tag }} # Added: Provide the image name

      - name: Attest CycloneDX SBOM for Image
        uses: actions/attest-sbom@v2
        with:
          subject-name: ${{ inputs.image_name_no_tag}}  # Do NOT include a tag as part of the image name -- the supplied digest subject-digest identifies the specific image being attested.
          subject-digest: ${{ inputs.image_digest }}  
          sbom-path: ./downloaded-artifacts/${{ inputs.sbom_cyclonedx_path }}
          push-to-registry: false
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Attest SPDX SBOM for Image
        uses: actions/attest-sbom@v2
        with:
          subject-name: ${{ inputs.image_name_no_tag}} # Do NOT include a tag as part of the image name -- the supplied digest subject-digest identifies the specific image being attested.
          subject-digest: ${{ inputs.image_digest }}  
          sbom-path: ./downloaded-artifacts/${{ inputs.sbom_spdx_path }}
          push-to-registry: false
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Unsupported SBOM format
      #- name: Attest Syft JSON SBOM for Image
      #  uses: actions/attest-sbom@v2
      #  with:
      #    subject-name: ${{ inputs.image_name_no_tag}} # Do NOT include a tag as part of the image name -- the supplied digest subject-digest identifies the specific image being attested.
      #    subject-digest: ${{ inputs.image_digest }}  
      #    sbom-path: ./downloaded-artifacts/${{ inputs.sbom_syft_json_path }}
      #    push-to-registry: false
      #    github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Sanitize Image Digest for Tagging
        id: sanitize_digest
        run: |
          echo "sanitized_digest=$(echo "${{ inputs.image_digest }}" | tr ':' '-')" >> $GITHUB_OUTPUT

      - name: Publish CycloneDX SBOM as OCI Artifact
        id: oras_push_cyclonedx
        run: |
          OCI_ARTIFACT_TAG="${{ steps.sanitize_digest.outputs.sanitized_digest }}.sbom.cdx.json"
          echo "Publishing CycloneDX SBOM to ghcr.io/${{ inputs.image_name_no_tag }}:$OCI_ARTIFACT_TAG"
          oras push "ghcr.io/${{ inputs.image_name_no_tag }}:$OCI_ARTIFACT_TAG" \
            "./downloaded-artifacts/${{ inputs.sbom_cyclonedx_path }}:application/vnd.cyclonedx+json"

      - name: Publish SPDX SBOM as OCI Artifact
        id: oras_push_spdx
        run: |
          OCI_ARTIFACT_TAG="${{ steps.sanitize_digest.outputs.sanitized_digest }}.sbom.spdx.json"
          echo "Publishing SPDX SBOM to ghcr.io/${{ inputs.image_name_no_tag }}:$OCI_ARTIFACT_TAG"
          oras push "ghcr.io/${{ inputs.image_name_no_tag }}:$OCI_ARTIFACT_TAG" \
            "./downloaded-artifacts/${{ inputs.sbom_spdx_path }}:application/spdx+json"

      - name: Publish Syft JSON SBOM as OCI Artifact
        id: oras_push_syft
        run: |
          OCI_ARTIFACT_TAG="${{ steps.sanitize_digest.outputs.sanitized_digest }}.sbom.syft.json"
          echo "Publishing Syft JSON SBOM to ghcr.io/${{ inputs.image_name_no_tag }}:$OCI_ARTIFACT_TAG"
          oras push "ghcr.io/${{ inputs.image_name_no_tag }}:$OCI_ARTIFACT_TAG" \
            "./downloaded-artifacts/${{ inputs.sbom_syft_json_path }}:application/vnd.syft+json"

      - name: Echo Attestation Details
        run: |
          echo "OCI Image Attestation ID: ${{ steps.attest_image.outputs.attestation-id }}"
          echo "Find attestations at: https://github.com/${{ github.repository }}/attestations"

      - name: Fetch artifact index
        run: |
          oras discover --format json ${{ inputs.image_name_no_tag}}@${{ inputs.image_digest }} | jq

