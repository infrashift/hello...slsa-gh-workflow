name: Reusable OCI Builder and Scanner

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      image_tag:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      build_context:
        required: true
        type: string
    outputs:
      image_name_with_tag:
        description: "Full image name with tag"
        value: ${{ jobs.build_scan.outputs.image_name_with_tag }}
      image_name_no_tag:
        description: "Image name without tag (for ORAS)"
        value: ${{ inputs.image_name }}
      image_digest:
        description: "Digest of the pushed OCI image"
        value: ${{ jobs.build_scan.outputs.image_digest }}
      sbom_cyclonedx_path:
        description: "Path to CycloneDX SBOM JSON file"
        value: ${{ jobs.build_scan.outputs.sbom_cyclonedx_path }}
      sbom_spdx_path:
        description: "Path to SPDX SBOM JSON file"
        value: ${{ jobs.build_scan.outputs.sbom_spdx_path }}
      sbom_syft_json_path:
        description: "Path to Syft JSON SBOM file"
        value: ${{ jobs.build_scan.outputs.sbom_syft_json_path }}
      cve_report_path:
        description: "Path to Grype CVE report JSON file"
        value: ${{ jobs.build_scan.outputs.cve_report_path }}

jobs:
  build_scan:
    runs-on: ubuntu-latest
    outputs:
      image_name_with_tag: ${{ steps.vars.outputs.image_name_with_tag }}
      image_digest: ${{ steps.build_and_push.outputs.digest }}
      sbom_cyclonedx_path: sbom-cyclonedx.json
      sbom_spdx_path: sbom-spdx.json
      sbom_syft_json_path: sbom-syft.json
      cve_report_path: cve-report.json
    permissions:
      contents: read
      packages: write # To push the image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image variables
        id: vars
        run: |
          echo "image_name_with_tag=ghcr.io/${{ inputs.image_name }}:${{ inputs.image_tag }}" >> $GITHUB_OUTPUT

      - name: Build and push OCI image
        id: build_and_push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.build_context }}
          file: ${{ inputs.dockerfile }}
          push: true
          tags: ${{ steps.vars.outputs.image_name_with_tag }}
          # SLSA: Provenance will be generated by a dedicated attestor workflow
          # Set to false if you want to use actions/attest-build-provenance exclusively
          # For this example, we let build-push-action create its own, and attestor will create another
          provenance: false 
          sbom: false # SBOMs will be generated by Syft

      - name: Install Anchore Syft
        uses: anchore/sbom-action/download-syft@v0.15.9 # Pin to a specific version

      - name: Generate SBOM - CycloneDX
        run: |
          syft packages ${{ steps.vars.outputs.image_name_with_tag }} -o cyclonedx-json > sbom-cyclonedx.json
        continue-on-error: true # Allow to continue if image has no packages

      - name: Generate SBOM - SPDX
        run: |
          syft packages ${{ steps.vars.outputs.image_name_with_tag }} -o spdx-json > sbom-spdx.json
        continue-on-error: true

      - name: Generate SBOM - Syft JSON
        run: |
          syft packages ${{ steps.vars.outputs.image_name_with_tag }} -o json > sbom-syft.json
        continue-on-error: true

      - name: Install Anchore Grype
        uses: anchore/scan-action/download-grype@v3 # Pin to a specific version

      - name: Scan for CVEs with Grype
        run: |
          grype ${{ steps.vars.outputs.image_name_with_tag }} -o json > cve-report.json
        continue-on-error: true # Allow to continue if no CVEs or scan issues

      - name: Upload SBOMs and CVE report as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            sbom-cyclonedx.json
            sbom-spdx.json
            sbom-syft.json
            cve-report.json
